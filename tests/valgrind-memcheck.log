==47903== Memcheck, a memory error detector
==47903== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==47903== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info
==47903== Command: ../build/tests
==47903== Parent PID: 47620
==47903== 
==47903== Invalid write of size 4
==47903==    at 0x11D59E: main (tests.cu:732)
==47903==  Address 0x4e27a03 is 35 bytes inside a block of size 38 alloc'd
==47903==    at 0x48435C3: operator new[](unsigned long) (vg_replace_malloc.c:725)
==47903==    by 0x11D584: main (tests.cu:730)
==47903== 
==47903== Invalid read of size 1
==47903==    at 0x484F844: setenv (vg_replace_strmem.c:2413)
==47903==    by 0x11D5A8: main (tests.cu:734)
==47903==  Address 0x4e27a06 is 0 bytes after a block of size 38 alloc'd
==47903==    at 0x48435C3: operator new[](unsigned long) (vg_replace_malloc.c:725)
==47903==    by 0x11D584: main (tests.cu:730)
==47903== 
==47903== Invalid read of size 1
==47903==    at 0x484A234: strlen (vg_replace_strmem.c:502)
==47903==    by 0x4C59B81: __add_to_environ (setenv.c:131)
==47903==    by 0x484F906: setenv (vg_replace_strmem.c:2416)
==47903==    by 0x11D5A8: main (tests.cu:734)
==47903==  Address 0x4e27a06 is 0 bytes after a block of size 38 alloc'd
==47903==    at 0x48435C3: operator new[](unsigned long) (vg_replace_malloc.c:725)
==47903==    by 0x11D584: main (tests.cu:730)
==47903== 
==47903== Invalid read of size 1
==47903==    at 0x484DEE0: memmove (vg_replace_strmem.c:1410)
==47903==    by 0x4C59C04: __add_to_environ (setenv.c:192)
==47903==    by 0x484F906: setenv (vg_replace_strmem.c:2416)
==47903==    by 0x11D5A8: main (tests.cu:734)
==47903==  Address 0x4e27a06 is 0 bytes after a block of size 38 alloc'd
==47903==    at 0x48435C3: operator new[](unsigned long) (vg_replace_malloc.c:725)
==47903==    by 0x11D584: main (tests.cu:730)
==47903== 
==47903== Warning: noted but unhandled ioctl 0x30000001 with no direction hints.
==47903==    This could cause spurious value errors to appear.
==47903==    See README_MISSING_SYSCALL_OR_IOCTL for guidance on writing a proper wrapper.
==47903== Warning: set address range perms: large range [0x200000000, 0x300200000) (noaccess)
==47903== Warning: set address range perms: large range [0x7a94000, 0x27a93000) (noaccess)
==47903== Warning: set address range perms: large range [0x10006000000, 0x10106000000) (noaccess)
==47903== Warning: set address range perms: large range [0x2c000000, 0x3ffff000) (noaccess)
==47903== Warning: set address range perms: large range [0x3e000000, 0x53fff000) (noaccess)
==47903== Warning: set address range perms: large range [0x3e000000, 0x52000000) (noaccess)
==47903== Warning: set address range perms: large range [0x3e000000, 0x53fff000) (noaccess)
==47903== Warning: set address range perms: large range [0x2c000000, 0x3e000000) (noaccess)
==47903== 
==47903== HEAP SUMMARY:
==47903==     in use at exit: 74,631,442 bytes in 8,201 blocks
==47903==   total heap usage: 51,427 allocs, 43,226 frees, 428,315,010 bytes allocated
==47903== 
==47903== LEAK SUMMARY:
==47903==    definitely lost: 517 bytes in 9 blocks
==47903==    indirectly lost: 0 bytes in 0 blocks
==47903==      possibly lost: 10,208,703 bytes in 229 blocks
==47903==    still reachable: 64,422,222 bytes in 7,963 blocks
==47903==         suppressed: 0 bytes in 0 blocks
==47903== Rerun with --leak-check=full to see details of leaked memory
==47903== 
==47903== For lists of detected and suppressed errors, rerun with: -s
==47903== ERROR SUMMARY: 4 errors from 4 contexts (suppressed: 0 from 0)
